<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mul.HealthyGYM.Dao.BodyGalleryDao">

<!-- resultType이 map일 때, map의 key는 컬럼명을 대문자로 할당되고,
 	 map의 value는 반환되는 row의 key에 해당하는 컬럼의 값이 할당된다. -->
<!-- 바디갤러리 전체 게시글 조회(게시글 목록) 기본:최신순 -->
<select id="findAllBody" parameterType="com.mul.HealthyGYM.Dto.BbsParam" resultType="map">
	select b.bbsseq, title, content, wdate, rdate, ref, likecount, readcount, thumnail, bbstag,
			profile, nickname, ifnull(cnt, 0) cmtcount
	 from member a, 
	 	 (select row_number()over(order by ${order} desc) rnum,
				memberseq, bbsseq, bbstag, title, content, wdate, rdate, ref, likecount, readcount, thumnail
		  from bbs
		  where bbstag=2 and del=0
		  order by ${order} desc) b
	 LEFT OUTER JOIN (select count(*) cnt, bbsseq
		  from bbs_comment
		  group by bbsseq) c
	 on b.bbsseq=c.bbsseq
	 where a.memberseq=b.memberseq
	 and rnum between ${start} and ${end}
</select>

<!-- 바디갤러리 게시글 작성 -->
<insert id="saveBody" parameterType="com.mul.HealthyGYM.Dto.BbsDto">
	insert into bbs(bbsseq, memberseq, title, content, bbstag, wdate, rdate, thumnail)
	values(#{bbsseq}, #{memberseq}, #{title}, #{content}, 2, now(), now(), #{thumnail})
</insert>

<!-- 바디갤러리 게시글 수정 -->
<update id="updateBody" parameterType="com.mul.HealthyGYM.Dto.BbsDto">
	update bbs
	set title=#{title}, content=#{content}, rdate=now(), ref=1, thumnail=#{thumnail}
	where bbsseq=#{bbsseq}
</update>

<!-- 바디갤러리 게시글 삭제 -->
<delete id="deleteBodyById" parameterType="Integer">
	delete from bbs
	where bbsseq=#{bbsseq}
</delete>

<!-- 바디갤러리 상세 게시글 조회 -->
<select id="findBodyById" parameterType="Integer" resultType="map">
	select b.bbsseq, b.memberseq, b.title, b.content, b.wdate, b.rdate, b.likecount, b.readcount, m.nickname, m.profile
	from bbs as b
	join member as m
	on b.memberseq=m.memberseq
	where b.bbsseq=#{bbsseq}
</select>

<!-- 바디갤러리 조회수 증가 -->
<update id="updateBodyReadcount" parameterType="Integer">
	update bbs
	set readcount=readcount+1
	where bbsseq=#{bbsseq}
</update>

<!-- 바디갤러리 좋아요 : 1. 유저가 좋아요를 눌렀는지 확인, 1이면 좋아요 취소, 0이면 좋아요 등록 -->
<select id="findBodyLike" parameterType="com.mul.HealthyGYM.Dto.LikeDto" resultType="Integer">
	select count(*)
	from like_bbs
	where memberseq=#{memberseq} and bbsseq=#{bbsseq}
</select>

<!-- 바디갤러리 좋아요 : 2. 좋아요 등록 -->
<insert id="saveBodyLike" parameterType="com.mul.HealthyGYM.Dto.LikeDto">
	insert into like_bbs(memberseq, bbsseq)
	values(#{memberseq}, #{bbsseq})
</insert>

<!-- 바디갤러리 좋아요 : 3. 좋아요 취소 -->
 <delete id="deleteBodyLike" parameterType="com.mul.HealthyGYM.Dto.LikeDto">
	delete from like_bbs 
	where memberseq=#{memberseq} and bbsseq=#{bbsseq}
</delete>

<!-- 바디갤러리 좋아요 : 4. 갯수 업데이트 -->
<update id="updateBodyLikecount" parameterType="Integer">
	update bbs
	set likecount=(select count(*) from like_bbs where bbsseq=#{bbsseq})
	where bbsseq=#{bbsseq}
</update>

<!-- 신고기능 -->
<update id="updateBodyReport" parameterType="Integer">
	update bbs
	set report=1
	where bbsseq=#{bbsseq}
</update>

<!-- 댓글 작성 -->
<insert id="saveBodyComment" parameterType="map">
	insert into bbs_comment (memberseq, bbsseq, cmtcontent, cmtdel, step, ref)
  	values (#{memberseq}, #{bbsseq}, #{cmtcontent}, 0, 0, (SELECT COALESCE(MAX(ref), 0) + 1 FROM bbs_comment c WHERE c.bbsseq = #{bbsseq}))
</insert>

<!-- 대댓글 작성 -->
<insert id="saveBodyReply" parameterType="map">
	insert into bbs_comment (memberseq, bbsseq, cmtcontent, cmtdel, step, ref)
  	values (#{memberseq}, #{bbsseq}, #{cmtcontent}, 0, (SELECT COALESCE(MAX(step), 0) + 1 FROM bbs_comment c WHERE c.ref = #{ref}), #{ref})
</insert>	

<!-- 댓글 리스트 조회 -->
<select id="findAllBodyComment" parameterType="Integer" resultType="map">
	select c.commentseq, c.memberseq, c.bbsseq, c.cmtcontent, c.regdate, c.step, c.ref, m.nickname, m.profile
	from bbs_comment as c
	join member as m
	on c.memberseq=m.memberseq
	where c.bbsseq=#{bbsseq}
	order by c.ref asc
</select>

<!-- 댓글 수정 -->
<update id="updateBodyComment" parameterType="com.mul.HealthyGYM.Dto.BbsCommentDto">
	update bbs_comment
	set cmtcontent=#{cmtcontent}
	where commentseq=#{commentseq}
</update>

<!-- 댓글 삭제 시 대댓글이 있는 경우 댓글 수정 -->
<update id="updateComment" parameterType="map">
  UPDATE bbs_comment 
  SET cmtcontent = '삭제된 댓글입니다', cmtdel = 1 
  WHERE commentseq = #{commentseq} 
  AND EXISTS(SELECT commentseq FROM bbs_comment 
             WHERE ref = (SELECT ref FROM bbs_comment WHERE commentseq = #{commentseq}) 
             AND cmtdel = 0)
</update>

<!-- 댓글 삭제 시 대댓글이 없는 경우 댓글 삭제 -->
<delete id="deleteCommentWithoutReply" parameterType="Integer">
  DELETE FROM bbs_comment 
  WHERE commentseq = #{commentseq}
</delete>

<!-- 대댓글 삭제 시 부모댓글이 있는 경우 대댓글 수정 -->
<update id="updateReply" parameterType="map">
  UPDATE bbs_comment SET cmtcontent = '삭제된 댓글입니다', cmtdel = 1 WHERE commentseq = #{commentseq} 
  AND EXISTS(SELECT commentseq FROM bbs_comment 
             WHERE ref = (SELECT ref FROM bbs_comment WHERE commentseq = #{commentseq}) 
             AND cmtdel = 0 
             AND step = (SELECT step FROM bbs_comment WHERE commentseq = #{commentseq}) - 1)
</update>

<!-- 대댓글 삭제 시 모든 대댓글이 삭제된 경우 댓글과 대댓글 일괄 삭제 -->
<delete id="deleteAllReplies" parameterType="Integer">
  DELETE FROM bbs_comment 
  WHERE ref = (SELECT ref FROM bbs_comment WHERE commentseq = #{commentseq})
</delete>

</mapper>